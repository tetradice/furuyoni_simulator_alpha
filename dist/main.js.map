{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,wBAAwB,sGAAsG;AAC9H,wBAAwB,6IAA6I;AACrK,wBAAwB,6JAA6J;AACrL,wBAAwB,qHAAqH;AAC7I,wBAAwB,mGAAmG;AAC3H,wBAAwB,sHAAsH;AAC9I,wBAAwB,yKAAyK;AACjM,wBAAwB,yHAAyH;AACjJ,wBAAwB,6JAA6J;AACrL,wBAAwB,+HAA+H;AACvJ,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA,wDAAwD,mBAAmB;AAC3E;AACA,yDAAyD,mBAAmB;AAC5E;AACA,0DAA0D,mBAAmB;AAC7E;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+BAA+B,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,+BAA+B,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,mCAAmC,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,oCAAoC,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,gCAAgC,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA,oCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA,oCAAoC,6BAA6B,EAAE;AACnE;AACA;AACA,KAAK;AACL,oCAAoC,+BAA+B,EAAE;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAA2C;AAClE,uBAAuB,2DAA2D;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAwD,qIAAqI;AAC7L;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sDAAsD,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0DAA0D,0CAA0C,EAAE;AACtG;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAA6C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kDAAkD,6CAA6C;AAC/F,2CAA2C,yDAAyD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+DAA+D;AAC7G;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iDAAiD,+BAA+B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;AAC/B;AACA,6CAA6C;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wEAAwE;AACxE,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,yBAAyB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oCAAoC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2EAA2E,EAAE;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,MAAM,SAAS,aAAa;AACxE,QAAQ;AACR;AACA;AACA,8CAA8C,WAAW;AACzD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,eAAe;AACnC,uBAAuB,eAAe;AACtC;AACA,uBAAuB;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6DAA6D,wBAAwB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,sCAAsC,mCAAmC,EAAE,EAAE;AAClG;AACA,0BAA0B,uCAAuC,yBAAyB,EAAE,EAAE;AAC9F,uCAAuC,0BAA0B;AACjE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,gBAAgB;AACvC;AACA,uBAAuB,gBAAgB;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2DAA2D;AAC5E,iBAAiB,oDAAoD;AACrE,iBAAiB,oDAAoD;AACrE,iBAAiB,oDAAoD;AACrE,iBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D,+BAA+B,iBAAiB;AAChD,2DAA2D;AAC3D;AACA;AACA,aAAa;AACb;AACA,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD,6CAA6C,WAAW;AACxD,6CAA6C,WAAW;AACxD;AACA;AACA;AACA,wBAAwB;AACxB;AACA,kCAAkC,cAAc;AAChD;AACA;AACA,SAAS;AACT,KAAK;AACL,qBAAqB,gBAAgB;AACrC;AACA,YAAY;AACZ,cAAc;AACd,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY;AACZ,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY,qCAAqC,mBAAmB,qCAAqC,cAAc;AACvH,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY,qCAAqC,mBAAmB,iCAAiC,cAAc;AACnH,cAAc,oCAAoC,mBAAmB,iCAAiC,cAAc;AACpH,cAAc;AACd,cAAc,gCAAgC,mBAAmB,iCAAiC,cAAc;AAChH,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY;AACZ,cAAc,qCAAqC,mBAAmB,kCAAkC;AACxG,cAAc;AACd,cAAc,gCAAgC,mBAAmB,iCAAiC,cAAc;AAChH,cAAc;AACd,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY,uCAAuC,mBAAmB,kCAAkC,cAAc;AACtH,cAAc;AACd,cAAc,gCAAgC,mBAAmB,iCAAiC,cAAc;AAChH,cAAc;AACd,cAAc;AACd;AACA;AACA,YAAY;AACZ,cAAc;AACd,cAAc,gCAAgC,mBAAmB,kCAAkC,cAAc;AACjH,cAAc,gCAAgC,mBAAmB,kCAAkC,cAAc;AACjH,cAAc;AACd;AACA;AACA,CAAC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","//import * as sakuraba from '../lib/sakuraba';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar CARD_DATA = {\r\n    '01-yurina-o-n-1': { name: '斬', ruby: 'ざん', baseType: 'normal', types: ['attack'], range: \"3-4\", damage: '3/1', text: '' },\r\n    '01-yurina-o-n-2': { name: '一閃', ruby: 'いっせん', baseType: 'normal', types: ['attack'], range: \"3\", damage: '2/2', text: '【常時】決死-あなたのライフが3以下ならば、この《攻撃》は+1/+0となる。' },\r\n    '01-yurina-o-n-3': { name: '柄打ち', ruby: 'つかうち', baseType: 'normal', types: ['attack'], range: \"1-2\", damage: '2/1', text: '【攻撃後】決死-あなたのライフが3以下ならば、このターンにあなたが次に行う《攻撃》は+1/+0となる。' },\r\n    '01-yurina-o-n-4': { name: '居合', ruby: 'いあい', baseType: 'normal', types: ['attack', 'fullpower'], range: \"3-4\", damage: '4/3', text: '' },\r\n    '01-yurina-o-n-5': { name: '足捌き', ruby: 'あしさばき', baseType: 'normal', types: ['action'], text: '現在の間合が4以上ならば、間合→ダスト：2' },\r\n    '01-yurina-o-n-6': { name: '圧気', ruby: 'あっき', baseType: 'normal', types: ['enhance'], capacity: '4', text: '隙\\n【破棄時】攻撃『適正距離1-4、3/-』を行う。' },\r\n    '01-yurina-o-n-7': { name: '気炎万丈', ruby: 'きえんばんじょう', baseType: 'normal', types: ['enhance', 'fullpower'], capacity: '2', text: '【展開中】決死-あなたのライフが3以下ならば、あなたの他のメガミによる《攻撃》は+1/+1となるとともに超克を得る。' },\r\n    '01-yurina-o-s-1': { name: '月影落', ruby: 'つきかげおとし', baseType: 'special', cost: '7', types: ['attack'], range: '3-4', damage: '4/4', text: '' },\r\n    '01-yurina-o-s-2': { name: '浦波嵐', ruby: 'うらなみあらし', baseType: 'special', cost: '3', types: ['attack', 'reaction'], range: '0-10', damage: '2/-', text: '【攻撃後】対応した《攻撃》は-2/+0となる。' },\r\n    '01-yurina-o-s-3': { name: '浮舟宿', ruby: 'うきふねやどし', baseType: 'special', cost: '3', types: ['action'], text: 'ダスト→自オーラ：5 \\n【再起】決死-あなたのライフが3以下である。' },\r\n    '01-yurina-o-s-4': { name: '天音揺波の底力', ruby: 'あまねゆりなのそこぢから', baseType: 'special', cost: '5', types: ['attack', 'fullpower'], range: '1-4', damage: '5/5', text: '【常時】決死-あなたのライフが3以下でないと、このカードは使用できない。' }\r\n};\r\n// クラス\r\nvar Card = /** @class */ (function () {\r\n    function Card(id) {\r\n        this.id = id;\r\n    }\r\n    Object.defineProperty(Card.prototype, \"data\", {\r\n        get: function () {\r\n            return CARD_DATA[this.id];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Card;\r\n}());\r\nvar Layouter = /** @class */ (function () {\r\n    function Layouter() {\r\n    }\r\n    // 横に並んだカードやトークンをレイアウトする\r\n    Layouter.exec = function (selector, frameWidth, spacing, padding) {\r\n        if (spacing === void 0) { spacing = 8; }\r\n        if (padding === void 0) { padding = 4; }\r\n        var $elems = $(selector);\r\n        var itemWidth = $elems.outerWidth();\r\n        $elems.each(function (i, elem) {\r\n            $(elem).css('left', padding + (itemWidth + spacing) * i + \"px\").css('top', padding + \"px\");\r\n        });\r\n    };\r\n    return Layouter;\r\n}());\r\nvar Component = /** @class */ (function () {\r\n    function Component() {\r\n        this.draggable = true;\r\n        this.rotated = 0;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.drawn = false;\r\n    }\r\n    /**\r\n     * 位置が変更されていればtrue\r\n     */\r\n    Component.prototype.isLocationChanged = function () {\r\n        return this.region !== this.oldRegion\r\n            || this.indexOfRegion !== this.oldIndexOfRegion\r\n            || this.draggable !== this.oldDraggable\r\n            || this.rotated !== this.oldRotated;\r\n    };\r\n    Component.prototype.updateLocation = function () {\r\n        this.oldRegion = this.region;\r\n        this.oldIndexOfRegion = this.indexOfRegion;\r\n        this.oldDraggable = this.draggable;\r\n        this.oldRotated = this.rotated;\r\n    };\r\n    Object.defineProperty(Component.prototype, \"zIndexOffset\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Component;\r\n}());\r\nvar CardComponent = /** @class */ (function (_super) {\r\n    __extends(CardComponent, _super);\r\n    function CardComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.opened = false;\r\n        return _this;\r\n    }\r\n    CardComponent.prototype.toHtml = function () {\r\n        return (\"<div class=\\\"fbs-card\\\" draggable=\\\"true\\\" id=\\\"\" + this.htmlElementId + \"\\\" data-card-id=\\\"\" + this.card.id + \"\\\" data-html=\\\"\" + this.getDescriptionHtml() + \"\\\"></div>\");\r\n    };\r\n    CardComponent.prototype.isLocationChanged = function () {\r\n        return _super.prototype.isLocationChanged.call(this) || this.opened !== this.oldOpened;\r\n    };\r\n    CardComponent.prototype.updateLocation = function () {\r\n        _super.prototype.updateLocation.call(this);\r\n        this.oldOpened = this.opened;\r\n    };\r\n    CardComponent.prototype.getDescriptionHtml = function () {\r\n        var cardTitleHtml = \"<ruby><rb>\" + this.card.data.name + \"</rb><rp>(</rp><rt>\" + this.card.data.ruby + \"</rt><rp>)</rp></ruby>\";\r\n        var html = \"<div class='ui header' style='margin-right: 2em;'>\" + cardTitleHtml;\r\n        html += \"</div><div class='ui content'>\";\r\n        var typeCaptions = [];\r\n        if (this.card.data.types.indexOf('attack') >= 0)\r\n            typeCaptions.push(\"<span style='color: red; font-weight: bold;'>攻撃</span>\");\r\n        if (this.card.data.types.indexOf('action') >= 0)\r\n            typeCaptions.push(\"<span style='color: blue; font-weight: bold;'>行動</span>\");\r\n        if (this.card.data.types.indexOf('enhance') >= 0)\r\n            typeCaptions.push(\"<span style='color: green; font-weight: bold;'>付与</span>\");\r\n        if (this.card.data.types.indexOf('reaction') >= 0)\r\n            typeCaptions.push(\"<span style='color: purple; font-weight: bold;'>対応</span>\");\r\n        if (this.card.data.types.indexOf('fullpower') >= 0)\r\n            typeCaptions.push(\"<span style='color: gold; font-weight: bold;'>全力</span>\");\r\n        html += \"\" + typeCaptions.join('/');\r\n        if (this.card.data.range !== undefined) {\r\n            html += \"<span style='margin-left: 1em;'>\" + this.card.data.range + \"</span>\";\r\n        }\r\n        html += \"<br>\";\r\n        if (this.card.data.baseType === 'special') {\r\n            html += \"<div class='ui top right attached label'>\" + this.card.data.cost + \"</div>\";\r\n        }\r\n        if (this.card.data.types.indexOf('enhance') >= 0) {\r\n            html += \"\\u7D0D: \" + this.card.data.capacity + \"<br>\";\r\n        }\r\n        if (this.card.data.damage !== undefined) {\r\n            html += this.card.data.damage + \"<br>\";\r\n        }\r\n        html += \"\" + this.card.data.text.replace('\\n', '<br>');\r\n        html += \"</div>\";\r\n        return html;\r\n    };\r\n    return CardComponent;\r\n}(Component));\r\nvar SakuraTokenComponent = /** @class */ (function (_super) {\r\n    __extends(SakuraTokenComponent, _super);\r\n    function SakuraTokenComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cardId = null;\r\n        return _this;\r\n    }\r\n    SakuraTokenComponent.prototype.toHtml = function () {\r\n        return (\"<div class=\\\"sakura-token\\\" draggable=\\\"true\\\" id=\\\"\" + this.htmlElementId + \"\\\"></div>\");\r\n    };\r\n    Object.defineProperty(SakuraTokenComponent.prototype, \"zIndexOffset\", {\r\n        get: function () {\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SakuraTokenComponent;\r\n}(Component));\r\nvar VigorComponent = /** @class */ (function (_super) {\r\n    __extends(VigorComponent, _super);\r\n    function VigorComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    VigorComponent.prototype.toHtml = function () {\r\n        return (\"<div class=\\\"fbs-vigor-card\\\" id=\\\"\" + this.htmlElementId + \"\\\">\\n        <div class=\\\"vigor0\\\"></div>\\n        <div class=\\\"vigor1\\\"></div>\\n        <div class=\\\"vigor2\\\"></div>\\n        </div>\");\r\n    };\r\n    // 表示状態を決定\r\n    VigorComponent.prototype.setVigor = function (value) {\r\n        if (value === 0) {\r\n            this.rotated = 1;\r\n        }\r\n        if (value === 1) {\r\n            this.rotated = 0;\r\n        }\r\n        if (value === 2) {\r\n            this.rotated = -1;\r\n        }\r\n    };\r\n    return VigorComponent;\r\n}(Component));\r\n// 盤を定義\r\nvar board = {\r\n    library: [new Card('01-yurina-o-n-1'), new Card('01-yurina-o-n-2'), new Card('01-yurina-o-n-3'), new Card('01-yurina-o-n-4')],\r\n    hands: [new Card('01-yurina-o-n-7'), new Card('01-yurina-o-n-5'), new Card('01-yurina-o-n-6')],\r\n    specials: [new Card('01-yurina-o-s-1'), new Card('01-yurina-o-s-2'), new Card('01-yurina-o-s-3')],\r\n    used: [],\r\n    hiddenUsed: [],\r\n    vigor: 1,\r\n    tokensOnCard: {},\r\n    aura: 3,\r\n    life: 10,\r\n    flair: 0,\r\n    distance: 10,\r\n    dust: 0\r\n};\r\n// コンポーネント一覧\r\nvar components = [];\r\n// 変数を定義\r\nvar draggingFrom = null;\r\nvar contextMenuShowingAfterDrop = false;\r\n// 関数\r\nfunction shuffle(array) {\r\n    var n = array.length, t, i;\r\n    while (n) {\r\n        i = Math.floor(Math.random() * n--);\r\n        t = array[n];\r\n        array[n] = array[i];\r\n        array[i] = t;\r\n    }\r\n    return array;\r\n}\r\nfunction createCardComponent(card, region, indexOfRegion, opened) {\r\n    if (opened === void 0) { opened = false; }\r\n    var newCard = new CardComponent;\r\n    newCard.card = card;\r\n    newCard.htmlElementId = \"fbs-card-\" + card.id;\r\n    newCard.region = region;\r\n    newCard.indexOfRegion = indexOfRegion;\r\n    newCard.opened = opened;\r\n    components.push(newCard);\r\n}\r\nfunction createVigorComponent() {\r\n    var comp = new VigorComponent;\r\n    comp.region = 'vigor';\r\n    comp.htmlElementId = \"fbs-vigor-card\";\r\n    components.push(comp);\r\n}\r\nvar sakuraTokenTotalCount = 0;\r\nfunction createSakuraTokenComponent(region, count) {\r\n    for (var i = 0; i < count; i++) {\r\n        var newComp = new SakuraTokenComponent;\r\n        newComp.region = region;\r\n        newComp.indexOfRegion = i;\r\n        newComp.htmlElementId = \"sakura-token-\" + sakuraTokenTotalCount;\r\n        sakuraTokenTotalCount++;\r\n        components.push(newComp);\r\n    }\r\n}\r\n// 盤上のコンポーネント表示を更新\r\nfunction updateComponents() {\r\n    // 山札の再配置\r\n    var libraryOffset = $('.area.library.background').position();\r\n    components.filter(function (x) { return x.region === 'library'; }).forEach(function (comp, i) {\r\n        comp.left = libraryOffset.left + 4 + comp.indexOfRegion * 8;\r\n        comp.top = libraryOffset.top + 4 + comp.indexOfRegion * 3;\r\n    });\r\n    // 手札の再配置\r\n    var handOffset = $('.area.hand.background').position();\r\n    components.filter(function (x) { return x.region === 'hand'; }).forEach(function (comp, i) {\r\n        comp.left = handOffset.left + 4 + comp.indexOfRegion * 108;\r\n        comp.top = handOffset.top + 4;\r\n    });\r\n    // 切り札の再配置\r\n    var specialOffset = $('.area.special.background').position();\r\n    components.filter(function (x) { return x.region === 'special'; }).forEach(function (comp, i) {\r\n        comp.left = specialOffset.left + 4 + comp.indexOfRegion * 108;\r\n        comp.top = specialOffset.top + 4;\r\n    });\r\n    // 使用済札の再配置\r\n    var usedOffset = $('.area.used.background').position();\r\n    components.filter(function (x) { return x.region === 'used'; }).forEach(function (comp, i) {\r\n        comp.left = usedOffset.left + 4 + comp.indexOfRegion * 108;\r\n        comp.top = usedOffset.top + 4;\r\n    });\r\n    // 伏せ札の再配置\r\n    var hiddenUsedOffset = $('.area.hidden-used.background').position();\r\n    components.filter(function (x) { return x.region === 'hidden-used'; }).forEach(function (comp, i) {\r\n        comp.left = 20 + hiddenUsedOffset.left + 4 + comp.indexOfRegion * 8;\r\n        comp.top = -20 + hiddenUsedOffset.top + 4 + comp.indexOfRegion * 3;\r\n    });\r\n    // 集中力の再配置\r\n    var vigorOffset = $('.area.vigor').position();\r\n    components.filter(function (x) { return x instanceof VigorComponent; }).forEach(function (comp, i) {\r\n        if (comp.rotated === 0) {\r\n            comp.left = vigorOffset.left;\r\n            comp.top = vigorOffset.top + 40;\r\n        }\r\n        else {\r\n            comp.left = vigorOffset.left;\r\n            comp.top = vigorOffset.top + 20;\r\n        }\r\n    });\r\n    // 桜花結晶の再配置\r\n    var distanceOffset = $('.area.sakura-token-region.distance').position();\r\n    components.filter(function (x) { return x.region === 'distance'; }).forEach(function (comp, i) {\r\n        comp.left = distanceOffset.left + 60 + ((28 + 4) * i);\r\n        comp.top = distanceOffset.top + 2;\r\n    });\r\n    var dustOffset = $('.area.sakura-token-region.dust').position();\r\n    components.filter(function (x) { return x.region === 'dust'; }).forEach(function (comp, i) {\r\n        comp.left = dustOffset.left + 60 + ((28 + 4) * i);\r\n        comp.top = dustOffset.top + 2;\r\n    });\r\n    var auraOffset = $('.area.sakura-token-region.aura').position();\r\n    components.filter(function (x) { return x.region === 'aura'; }).forEach(function (comp, i) {\r\n        comp.left = auraOffset.left + 60 + ((28 + 4) * i);\r\n        comp.top = auraOffset.top + 2;\r\n    });\r\n    var lifeOffset = $('.area.sakura-token-region.life').position();\r\n    components.filter(function (x) { return x.region === 'life'; }).forEach(function (comp, i) {\r\n        comp.left = lifeOffset.left + 60 + ((28 + 4) * i);\r\n        comp.top = lifeOffset.top + 2;\r\n    });\r\n    var flairOffset = $('.area.sakura-token-region.flair').position();\r\n    components.filter(function (x) { return x.region === 'flair'; }).forEach(function (comp, i) {\r\n        comp.left = flairOffset.left + 60 + ((28 + 4) * i);\r\n        comp.top = flairOffset.top + 2;\r\n    });\r\n    components.filter(function (x) { return x.region === 'on-card'; }).forEach(function (comp, i) {\r\n        var offset = $(\"[data-card-id=\" + comp.cardId + \"]\").position();\r\n        comp.left = offset.left + 2 + comp.indexOfRegion * 20;\r\n        comp.top = offset.top + 140 - 2 - 32;\r\n    });\r\n    // コンポーネントごとに描画/移動処理\r\n    var boardOffset = $('#BOARD').offset();\r\n    components.forEach(function (component, index) {\r\n        var $elem = null;\r\n        if (!component.drawn) {\r\n            $('#BOARD').append(component.toHtml());\r\n            $elem = $(\"#\" + component.htmlElementId);\r\n        }\r\n        if (!component.drawn || component.isLocationChanged()) {\r\n            if ($elem === null) {\r\n                $elem = $(\"#\" + component.htmlElementId);\r\n            }\r\n            // ドラッグ可能の判定\r\n            if (component.draggable) {\r\n                $elem.attr('draggable', '');\r\n            }\r\n            else {\r\n                $elem.removeAttr('draggable');\r\n            }\r\n            // 回転\r\n            $elem.removeClass(['rotated', 'reverse-rotated']);\r\n            if (component.rotated === 1) {\r\n                $elem.addClass('rotated');\r\n            }\r\n            else if (component.rotated === -1) {\r\n                $elem.addClass('reverse-rotated');\r\n            }\r\n            // カード用の処理\r\n            if (component instanceof CardComponent) {\r\n                // 裏表の更新\r\n                $elem.removeClass(['open-normal', 'back-normal', 'open-special', 'back-special']);\r\n                if (component.card.data.baseType === 'normal') {\r\n                    if (component.opened) {\r\n                        $elem.addClass('open-normal');\r\n                    }\r\n                    else {\r\n                        $elem.addClass('back-normal');\r\n                    }\r\n                }\r\n                if (component.card.data.baseType === 'special') {\r\n                    if (component.opened) {\r\n                        $elem.addClass('open-special');\r\n                    }\r\n                    else {\r\n                        $elem.addClass('back-special');\r\n                    }\r\n                }\r\n                // 名称表示の更新\r\n                $elem.text(component.opened ? component.card.data.name : '');\r\n            }\r\n            // 集中力用の処理\r\n            if (component instanceof VigorComponent) {\r\n                if (board.vigor === 0) {\r\n                    $elem.find('.vigor1').addClass('clickable');\r\n                    $elem.find(':not(.vigor1)').removeClass('clickable');\r\n                }\r\n                if (board.vigor === 1) {\r\n                    $elem.find('.vigor0, .vigor2').addClass('clickable');\r\n                    $elem.find('.vigor1').removeClass('clickable');\r\n                }\r\n                if (board.vigor === 2) {\r\n                    $elem.find('.vigor1').addClass('clickable');\r\n                    $elem.find(':not(.vigor1)').removeClass('clickable');\r\n                }\r\n            }\r\n            // 位置を移動 (向きを変えた後に実行する必要がある）\r\n            $elem.css({ left: component.left, top: component.top });\r\n            $elem.css({ zIndex: component.zIndexOffset + component.indexOfRegion });\r\n            // リージョン属性付加\r\n            $elem.attr('data-region', component.region);\r\n            // 古い位置情報を捨てる\r\n            component.updateLocation();\r\n        }\r\n        // 描画済フラグを立てる\r\n        if (!component.drawn) {\r\n            component.drawn = true;\r\n        }\r\n    });\r\n    // ライブラリカウント増減\r\n    $('#LIBRARY-COUNT').text(board.library.length).css({ right: parseInt($('.area.library.background').css('right')) + 8, bottom: parseInt($('.area.library.background').css('bottom')) + 8 });\r\n}\r\nfunction drawLibrary() {\r\n    board.library.forEach(function (card, i) {\r\n        createCardComponent(card, 'library', i);\r\n    });\r\n}\r\nfunction drawHands() {\r\n    board.hands.forEach(function (card, i) {\r\n        createCardComponent(card, 'hand', i, true);\r\n    });\r\n}\r\nfunction drawSpecials() {\r\n    board.specials.forEach(function (card, i) {\r\n        createCardComponent(card, 'special', i);\r\n    });\r\n}\r\nfunction drawUsed() {\r\n    board.used.forEach(function (card, i) {\r\n        createCardComponent(card, 'used', innerWidth, true);\r\n    });\r\n}\r\nfunction drawHiddenUsed() {\r\n    board.hiddenUsed.forEach(function (card, i) {\r\n        createCardComponent(card, 'hidden-used', i);\r\n    });\r\n}\r\nfunction drawVigor() {\r\n    createVigorComponent();\r\n}\r\nfunction drawSakuraTokens() {\r\n    createSakuraTokenComponent('distance', 10);\r\n    createSakuraTokenComponent('aura', 3);\r\n    createSakuraTokenComponent('life', 10);\r\n}\r\nfunction appendLog(text) {\r\n    $('#LOG-AREA').append(text).append('<br>');\r\n}\r\n// カードを移動\r\nfunction moveCard(from, fromIndex, to, addToBottom) {\r\n    if (addToBottom === void 0) { addToBottom = false; }\r\n    console.log('move card (%s[%d] -> %s)', from, fromIndex, to);\r\n    // 移動可能かどうかをチェック\r\n    // 移動\r\n    var card;\r\n    if (from === 'library') {\r\n        card = board.library.splice(fromIndex, 1)[0];\r\n    }\r\n    if (from === 'hand') {\r\n        card = board.hands.splice(fromIndex, 1)[0];\r\n    }\r\n    if (from === 'used') {\r\n        card = board.used.splice(fromIndex, 1)[0];\r\n    }\r\n    if (from === 'hidden-used') {\r\n        card = board.hiddenUsed.splice(fromIndex, 1)[0];\r\n    }\r\n    var toTarget;\r\n    if (to === 'library') {\r\n        toTarget = board.library;\r\n    }\r\n    if (to === 'hand') {\r\n        toTarget = board.hands;\r\n    }\r\n    if (to === 'used') {\r\n        toTarget = board.used;\r\n    }\r\n    if (to === 'hidden-used') {\r\n        toTarget = board.hiddenUsed;\r\n    }\r\n    if (addToBottom) {\r\n        toTarget.unshift(card);\r\n    }\r\n    else {\r\n        toTarget.push(card);\r\n    }\r\n    // ログを追加\r\n    if (from === 'library' && to === 'hand') {\r\n        appendLog(\"\\u30AB\\u30FC\\u30C9\\u30921\\u679A\\u5F15\\u304F \\u21D2 \" + card.data.name);\r\n    }\r\n    else if (from === 'hand' && to === 'used') {\r\n        appendLog(\"\\u300C\" + card.data.name + \"\\u300D\\u3092\\u5834\\u306B\\u51FA\\u3059\");\r\n    }\r\n    else if (from === 'hand' && to === 'hidden-used') {\r\n        appendLog(\"\\u300C\" + card.data.name + \"\\u300D\\u3092\\u4F0F\\u305B\\u672D\");\r\n    }\r\n    else {\r\n        var regionCaptions = {\r\n            'library': '山札',\r\n            'hand': '手札',\r\n            'used': '場',\r\n            'hidden-used': '伏せ札',\r\n        };\r\n        appendLog(regionCaptions[from] + \"\\u306E\\u300C\" + card.data.name + \"\\u300D\\u3092\" + regionCaptions[to] + \"\\u306B\\u79FB\\u52D5\");\r\n    }\r\n    // コンポーネントのインデックス更新\r\n    refreshCardComponentRegionInfo(from);\r\n    refreshCardComponentRegionInfo(to);\r\n    // 表示更新\r\n    updateComponents();\r\n    // 移動成功\r\n    return true;\r\n}\r\n// コンポーネントの領域情報を更新\r\nfunction refreshCardComponentRegionInfo(region) {\r\n    var cards;\r\n    if (region === 'library') {\r\n        cards = board.library;\r\n    }\r\n    if (region === 'hand') {\r\n        cards = board.hands;\r\n    }\r\n    if (region === 'used') {\r\n        cards = board.used;\r\n    }\r\n    if (region === 'hidden-used') {\r\n        cards = board.hiddenUsed;\r\n    }\r\n    // カード情報の更新\r\n    cards.forEach(function (card, i) {\r\n        var comp = components.find(function (x) { return x instanceof CardComponent && x.card === card; });\r\n        comp.region = region;\r\n        comp.indexOfRegion = i;\r\n        comp.draggable = (comp.region !== 'library' || comp.indexOfRegion === board.library.length - 1);\r\n        // 領域に依存する情報更新\r\n        if (region === 'hand' || region === 'used') {\r\n            comp.opened = true;\r\n        }\r\n        if (region === 'library' || region === 'hidden-used') {\r\n            comp.opened = false;\r\n        }\r\n        if (region !== 'hidden-used') {\r\n            comp.rotated = 0;\r\n        }\r\n        if (region === 'hidden-used') {\r\n            comp.rotated = 1;\r\n        }\r\n    });\r\n}\r\n// コンポーネントの領域情報を更新\r\nfunction refreshSakuraTokenComponentInfo() {\r\n    var allSakuraTokens = components.filter(function (x) { return x instanceof SakuraTokenComponent; });\r\n    var tokenIndex = 0;\r\n    // 対象領域にある結晶数に応じて表示更新\r\n    for (var i = 0; i < board.distance; i++) {\r\n        var comp = allSakuraTokens[tokenIndex];\r\n        comp.region = 'distance';\r\n        comp.indexOfRegion = i;\r\n        tokenIndex++;\r\n    }\r\n    for (var i = 0; i < board.dust; i++) {\r\n        var comp = allSakuraTokens[tokenIndex];\r\n        comp.region = 'dust';\r\n        comp.indexOfRegion = i;\r\n        tokenIndex++;\r\n    }\r\n    for (var i = 0; i < board.aura; i++) {\r\n        var comp = allSakuraTokens[tokenIndex];\r\n        comp.region = 'aura';\r\n        comp.indexOfRegion = i;\r\n        tokenIndex++;\r\n    }\r\n    for (var i = 0; i < board.life; i++) {\r\n        var comp = allSakuraTokens[tokenIndex];\r\n        comp.region = 'life';\r\n        comp.indexOfRegion = i;\r\n        tokenIndex++;\r\n    }\r\n    for (var i = 0; i < board.flair; i++) {\r\n        var comp = allSakuraTokens[tokenIndex];\r\n        comp.region = 'flair';\r\n        comp.indexOfRegion = i;\r\n        tokenIndex++;\r\n    }\r\n    for (var cardId in board.tokensOnCard) {\r\n        if (board.tokensOnCard.hasOwnProperty(cardId)) {\r\n            console.log(\"key:\", cardId);\r\n            for (var i = 0; i < board.tokensOnCard[cardId]; i++) {\r\n                var comp = allSakuraTokens[tokenIndex];\r\n                comp.region = 'on-card';\r\n                comp.cardId = cardId;\r\n                comp.indexOfRegion = i;\r\n                tokenIndex++;\r\n            }\r\n        }\r\n    }\r\n}\r\n// 桜花結晶を移動\r\nfunction moveSakuraToken(from, to, cardId, count) {\r\n    if (count === void 0) { count = 1; }\r\n    console.log('move sakura token (%s -> %s * %d)', from, to, count);\r\n    // 移動可能かどうかをチェック\r\n    if (from === 'distance') {\r\n        if (board.distance < count)\r\n            return false; // 桜花結晶がなければ失敗\r\n    }\r\n    else if (from === 'dust') {\r\n        if (board.dust < count)\r\n            return false; // 桜花結晶がなければ失敗\r\n    }\r\n    else if (from === 'aura') {\r\n        if (board.aura < count)\r\n            return false; // 桜花結晶がなければ失敗\r\n    }\r\n    else if (from === 'life') {\r\n        if (board.life < count)\r\n            return false; // 桜花結晶がなければ失敗\r\n    }\r\n    else if (from === 'flair') {\r\n        if (board.flair < count)\r\n            return false; // 桜花結晶がなければ失敗\r\n    }\r\n    if (to === 'distance') {\r\n        if ((board.distance + count) > 10)\r\n            return false; // 間合い最大値を超える場合は失敗\r\n    }\r\n    else if (to === 'aura') {\r\n        if ((board.aura + count) > 5)\r\n            return false; // オーラ最大値を超える場合は失敗\r\n    }\r\n    // 移動\r\n    if (from === 'distance') {\r\n        board.distance -= count;\r\n    }\r\n    else if (from === 'dust') {\r\n        board.dust -= count;\r\n    }\r\n    else if (from === 'aura') {\r\n        board.aura -= count;\r\n    }\r\n    else if (from === 'life') {\r\n        board.life -= count;\r\n    }\r\n    else if (from === 'flair') {\r\n        board.flair -= count;\r\n    }\r\n    if (to === 'distance') {\r\n        board.distance += count;\r\n    }\r\n    else if (to === 'dust') {\r\n        board.dust += count;\r\n    }\r\n    else if (to === 'aura') {\r\n        board.aura += count;\r\n    }\r\n    else if (to === 'life') {\r\n        board.life += count;\r\n    }\r\n    else if (to === 'flair') {\r\n        board.flair += count;\r\n    }\r\n    else if (to === 'on-card') {\r\n        if (board.tokensOnCard[cardId] === undefined)\r\n            board.tokensOnCard[cardId] = 0;\r\n        board.tokensOnCard[cardId] += count;\r\n    }\r\n    console.log(board);\r\n    // コンポーネントのインデックス更新\r\n    refreshSakuraTokenComponentInfo();\r\n    // 表示更新\r\n    updateComponents();\r\n    // 移動成功\r\n    return true;\r\n}\r\nfunction messageModal(desc) {\r\n    $('#MESSAGE-MODAL .description').html(desc);\r\n    //$('#INPUT-MODAL').on('click', decideCallback);\r\n    $('#MESSAGE-MODAL')\r\n        .modal({ closable: false })\r\n        .modal('show');\r\n}\r\nfunction userInputModal(desc, decideCallback) {\r\n    $('#INPUT-MODAL .description-body').html(desc);\r\n    //$('#INPUT-MODAL').on('click', decideCallback);\r\n    $('#INPUT-MODAL')\r\n        .modal({ closable: false, onApprove: decideCallback })\r\n        .modal('show');\r\n}\r\n$(function () {\r\n    // socket.ioに接続\r\n    var socket = io();\r\n    socket.on('info', function (message) {\r\n        console.log('[SOCKET.IO INFO] ', message);\r\n    });\r\n    // ボード情報をリクエスト\r\n    console.log('request_first_board_to_server');\r\n    socket.emit('request_first_board_to_server', { boardId: params.boardId, side: params.side });\r\n    //socket.emit('send_board_to_server', {boardId: params.boardId, side: params.side, board: board});\r\n    // ボード情報を受信した場合、メイン処理をスタート\r\n    socket.on('send_first_board_to_client', function (receivingBoardData) {\r\n        $('#P1-NAME').text(receivingBoardData.p1Side.playerName);\r\n        $('#P2-NAME').text(receivingBoardData.p2Side.playerName);\r\n        console.log('receive board: ', receivingBoardData);\r\n        // まだ名前が決定していなければ、名前の決定処理\r\n        var playerCommonName = (params.side === 'p1' ? 'プレイヤー1' : 'プレイヤー2');\r\n        var opponentPlayerCommonName = (params.side === 'p1' ? 'プレイヤー2' : 'プレイヤー1');\r\n        userInputModal(\"<p>\\u3075\\u308B\\u3088\\u306B\\u30DC\\u30FC\\u30C9\\u30B7\\u30DF\\u30E5\\u30EC\\u30FC\\u30BF\\u30FC\\u3078\\u3088\\u3046\\u3053\\u305D\\u3002<br>\\u3042\\u306A\\u305F\\u306F\" + playerCommonName + \"\\u3068\\u3057\\u3066\\u5353\\u306B\\u53C2\\u52A0\\u3057\\u307E\\u3059\\u3002</p><p>\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u540D\\uFF1A</p>\", function ($elem) {\r\n            var playerName = $('#INPUT-MODAL input').val();\r\n            if (playerName === '') {\r\n                playerName = playerCommonName;\r\n            }\r\n            socket.emit('player_name_input', { boardId: params.boardId, side: params.side, name: playerName });\r\n            $((params.side === 'p1' ? '#P1-NAME' : '#P2-NAME')).text(playerName);\r\n            messageModal(\"<p>\\u30B2\\u30FC\\u30E0\\u3092\\u59CB\\u3081\\u305F\\u3044\\u5834\\u5408\\u306F\\u3001\\u3042\\u306A\\u305F\\u3068\" + opponentPlayerCommonName + \"\\u306E\\u4E21\\u65B9\\u304C\\u5353\\u306B\\u53C2\\u52A0\\u3057\\u305F\\u72B6\\u614B\\u3067<br>\\u300C\\u30B2\\u30FC\\u30E0\\u958B\\u59CB\\u300D\\u30DC\\u30BF\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002</p>\");\r\n        });\r\n    });\r\n    // 盤を表示\r\n    drawUsed();\r\n    drawHiddenUsed();\r\n    drawLibrary();\r\n    drawHands();\r\n    drawSpecials();\r\n    drawVigor();\r\n    drawSakuraTokens();\r\n    refreshCardComponentRegionInfo('library');\r\n    // コンポーネントの表示を更新\r\n    updateComponents();\r\n    // ポップアップ初期化\r\n    $('[data-html],[data-content]').popup({\r\n        delay: { show: 500, hide: 0 },\r\n        onShow: function () {\r\n            if (draggingFrom !== null)\r\n                return false;\r\n        },\r\n    });\r\n    // ドラッグ開始\r\n    $('#BOARD').on('dragstart', '.fbs-card,.sakura-token', function (e) {\r\n        this.style.opacity = '0.4'; // this / e.target is the source node.\r\n        //(e.originalEvent as DragEvent).dataTransfer.setDragImage($(this.closest('.draw-region'))[0], 0, 0);\r\n        var id = $(this).attr('id');\r\n        var comp = components.find(function (c) { return c.htmlElementId === id; });\r\n        // 現在のエリアに応じて、選択可能なエリアを前面に移動し、選択したカードを記憶\r\n        if (comp.region === 'hand') {\r\n            // 手札\r\n            $('.area.droppable:not(.hand)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'library') {\r\n            // 山札\r\n            $('.area.droppable:not(.library)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'used') {\r\n            // 使用済札\r\n            $('.area.droppable:not(.used)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'hidden-used') {\r\n            // 伏せ札\r\n            $('.area.droppable:not(.hidden-used)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'distance') {\r\n            // 間合\r\n            $('.area.sakura-token-region.droppable:not(.distance)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'dust') {\r\n            // ダスト\r\n            $('.area.sakura-token-region.droppable:not(.dust)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'aura') {\r\n            // オーラ\r\n            $('.area.sakura-token-region.droppable:not(.aura)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n            // 場に出ている付与札があれば、それも移動対象\r\n            $('[data-region=used]').addClass('droppable');\r\n        }\r\n        if (comp.region === 'life') {\r\n            // ライフ\r\n            $('.area.sakura-token-region.droppable:not(.life)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        if (comp.region === 'flair') {\r\n            // フレア\r\n            $('.area.sakura-token-region.droppable:not(.flair)').css('z-index', 9999);\r\n            draggingFrom = comp;\r\n        }\r\n        console.log('draggingFrom: ', draggingFrom);\r\n        $('.fbs-card').popup('hide all');\r\n    });\r\n    function processOnDragEnd() {\r\n        // コンテキストメニューを表示している場合、一部属性の解除を行わない\r\n        if (!contextMenuShowingAfterDrop) {\r\n            $('[draggable]').css('opacity', '1.0');\r\n            $('.area,.fbs-card').removeClass('over');\r\n        }\r\n        $('.area.droppable').css('z-index', -9999);\r\n        draggingFrom = null;\r\n    }\r\n    $('#BOARD').on('dragend', '.fbs-card,.sakura-token', function (e) {\r\n        console.log('dragend', this);\r\n        processOnDragEnd();\r\n    });\r\n    $('#BOARD').on('dragover', '.droppable', function (e) {\r\n        if (e.preventDefault) {\r\n            e.preventDefault(); // Necessary. Allows us to drop.\r\n        }\r\n        //e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.\r\n        return false;\r\n    });\r\n    // ドラッグで要素に進入した\r\n    $('.area.droppable').on('dragenter', function (e) {\r\n        console.log('dragenter', this);\r\n        $($(this).attr('data-background-selector')).addClass('over');\r\n    });\r\n    $('.area.droppable').on('dragleave', function (e) {\r\n        console.log('dragleave', this);\r\n        $($(this).attr('data-background-selector')).removeClass('over'); // this / e.target is previous target element.\r\n    });\r\n    $('#BOARD').on('dragenter', '.fbs-card.droppable', function (e) {\r\n        $($(this)).addClass('over');\r\n    });\r\n    $('#BOARD').on('dragleave', '.fbs-card.droppable', function (e) {\r\n        $($(this)).removeClass('over'); // this / e.target is previous target element.\r\n    });\r\n    var lastDraggingFrom;\r\n    $('#BOARD').on('drop', '.area,.fbs-card.droppable', function (e) {\r\n        // this / e.target is current target element.\r\n        console.log('drop', this);\r\n        var $this = $(this);\r\n        if (e.stopPropagation) {\r\n            e.stopPropagation(); // stops the browser from redirecting.\r\n        }\r\n        // ドロップ領域を特定\r\n        var to;\r\n        if ($this.is('.area.hand'))\r\n            to = 'hand';\r\n        if ($this.is('.area.used'))\r\n            to = 'used';\r\n        if ($this.is('.area.hidden-used'))\r\n            to = 'hidden-used';\r\n        if ($this.is('.area.library'))\r\n            to = 'library';\r\n        if ($this.is('.area.distance'))\r\n            to = 'distance';\r\n        if ($this.is('.area.dust'))\r\n            to = 'dust';\r\n        if ($this.is('.area.aura'))\r\n            to = 'aura';\r\n        if ($this.is('.area.life'))\r\n            to = 'life';\r\n        if ($this.is('.area.flair'))\r\n            to = 'flair';\r\n        if ($this.is('.fbs-card'))\r\n            to = 'on-card';\r\n        if (draggingFrom !== null) {\r\n            // 山札に移動した場合は特殊処理\r\n            if (to === 'library') {\r\n                lastDraggingFrom = draggingFrom;\r\n                contextMenuShowingAfterDrop = true;\r\n                $('#CONTEXT-DRAG-TO-LIBRARY').contextMenu({ x: e.pageX, y: e.pageY });\r\n                return false;\r\n            }\r\n            else {\r\n                // 山札以外への移動の場合\r\n                if (draggingFrom instanceof CardComponent) {\r\n                    moveCard(draggingFrom.region, draggingFrom.indexOfRegion, to);\r\n                    return false;\r\n                }\r\n                if (draggingFrom instanceof SakuraTokenComponent) {\r\n                    var cardId = null;\r\n                    if (to === 'on-card') {\r\n                        cardId = $(this).attr('data-card-id');\r\n                    }\r\n                    moveSakuraToken(draggingFrom.region, to, cardId);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    });\r\n    // 集中力のクリック\r\n    function vigorProcess() {\r\n        var vigComp = components.find(function (x) { return x instanceof VigorComponent; });\r\n        vigComp.setVigor(board.vigor);\r\n        updateComponents();\r\n    }\r\n    $('#BOARD').on('click', '.fbs-vigor-card .vigor0.clickable', function (e) {\r\n        e.preventDefault();\r\n        appendLog(\"\\u96C6\\u4E2D\\u529B\\uFF0D1\\u3000(\\u21920)\");\r\n        board.vigor = 0;\r\n        vigorProcess();\r\n        return false;\r\n    });\r\n    $('#BOARD').on('click', '.fbs-vigor-card .vigor1.clickable', function (e) {\r\n        e.preventDefault();\r\n        if (board.vigor === 2) {\r\n            appendLog(\"\\u96C6\\u4E2D\\u529B\\uFF0D1\\u3000(\\u21921)\");\r\n        }\r\n        else {\r\n            appendLog(\"\\u96C6\\u4E2D\\u529B\\uFF0B1\\u3000(\\u21921)\");\r\n        }\r\n        board.vigor = 1;\r\n        vigorProcess();\r\n        return false;\r\n    });\r\n    $('#BOARD').on('click', '.fbs-vigor-card .vigor2.clickable', function (e) {\r\n        e.preventDefault();\r\n        appendLog(\"\\u96C6\\u4E2D\\u529B\\uFF0B1\\u3000(\\u21922)\");\r\n        board.vigor = 2;\r\n        vigorProcess();\r\n        return false;\r\n    });\r\n    // ログ表示\r\n    $('#LOG-DISPLAY-BUTTTON').on('click', function (e) {\r\n        $('#LOG-WINDOW').toggle();\r\n    });\r\n    // ターン終了\r\n    $('#TURN-END-BUTTON').on('click', function () {\r\n        $('.ui.modal').modal('show');\r\n    });\r\n    // 切札のダブルクリック\r\n    $('#BOARD').on('dblclick', '.fbs-card[data-region=special]', function (e) {\r\n        e.preventDefault();\r\n        var cardIndex = $('.fbs-card[data-region=special]').index(this);\r\n        console.log('double click', cardIndex);\r\n        var card = board.specials[cardIndex];\r\n        var comp = components.find(function (x) { return x instanceof CardComponent && x.card === board.specials[cardIndex]; });\r\n        if (card.used) {\r\n            card.used = false;\r\n            comp.opened = false;\r\n        }\r\n        else {\r\n            card.used = true;\r\n            comp.opened = true;\r\n        }\r\n        updateComponents();\r\n        return false;\r\n    });\r\n    // $('#BOARD').on('mouseenter', '.sakura-token', function(e){\r\n    //     let $region = $(this).closest('.draw-region');\r\n    //     // 自分のインデックスを取得\r\n    //     let index = $region.find('.sakura-token').index(this);\r\n    //     // 自分より後の要素を半透明にする\r\n    //     $region.find(`.sakura-token:gt(${index})`).css({opacity: 0.4});\r\n    // });\r\n    // $('#BOARD').on('mouseleave', '.sakura-token', function(e){\r\n    //     let $region = $(this).closest('.draw-region');\r\n    //     $region.find(`.sakura-token`).css({opacity: 1});\r\n    // });\r\n    // 山札ドラッグメニュー\r\n    $('#BOARD').append('<div id=\"CONTEXT-DRAG-TO-LIBRARY\"></div>');\r\n    $.contextMenu({\r\n        trigger: 'hidden',\r\n        selector: '#CONTEXT-DRAG-TO-LIBRARY',\r\n        callback: function (key) {\r\n            if (key === 'top') {\r\n                moveCard('hand', lastDraggingFrom.indexOfRegion, 'library');\r\n            }\r\n            if (key === 'bottom') {\r\n                moveCard('hand', lastDraggingFrom.indexOfRegion, 'library', true);\r\n            }\r\n        },\r\n        events: {\r\n            hide: function (options) {\r\n                contextMenuShowingAfterDrop = false;\r\n                console.log(options);\r\n                processOnDragEnd();\r\n            }\r\n        },\r\n        items: {\r\n            'top': { name: '上に置く' },\r\n            'bottom': { name: '底に置く' },\r\n            'sep': '----',\r\n            'cancel': { name: 'キャンセル' }\r\n        }\r\n    });\r\n    // 山札右クリックメニュー\r\n    $.contextMenu({\r\n        selector: '#BOARD .fbs-card[data-region=library]',\r\n        callback: function (key) {\r\n            if (key === 'draw') {\r\n                moveCard('library', 0, 'hand');\r\n            }\r\n            if (key === 'reshuffle' || key === 'reshuffleWithoutDamage') {\r\n                // 山札、捨て札、伏せ札を全て加えてシャッフル\r\n                board.library = board.library.concat(board.hiddenUsed.splice(0));\r\n                board.used.forEach(function (card, i) {\r\n                    if (card.sakuraToken === undefined || card.sakuraToken === 0) {\r\n                        board.library.push(card);\r\n                        board.used[i] = undefined;\r\n                    }\r\n                });\r\n                board.used = board.used.filter(function (c) { return c !== undefined; });\r\n                board.library = shuffle(board.library);\r\n                refreshCardComponentRegionInfo('library');\r\n                refreshCardComponentRegionInfo('used');\r\n                refreshCardComponentRegionInfo('hidden-used');\r\n                if (key === 'reshuffle')\r\n                    moveSakuraToken('life', 'dust', null);\r\n                updateComponents();\r\n                appendLog(\"\\u518D\\u69CB\\u6210\");\r\n            }\r\n        },\r\n        items: {\r\n            'draw': { name: '1枚引く', disabled: function () { return board.library.length === 0; } },\r\n            'sep1': '---------',\r\n            'reshuffle': { name: '再構成する', disabled: function () { return board.life === 0; } },\r\n            'reshuffleWithoutDamage': { name: '再構成する (ライフ減少なし)' },\r\n        }\r\n    });\r\n    // 集中力右クリックメニュー\r\n    $.contextMenu({\r\n        selector: '#BOARD .fbs-vigor-card',\r\n        callback: function (key) {\r\n        },\r\n        items: {\r\n            'wither': { name: '萎縮させる' },\r\n            'sep1': '---------',\r\n            'cancel': { name: 'キャンセル' },\r\n        }\r\n    });\r\n    // 桜花結晶右クリックメニュー\r\n    $.contextMenu({\r\n        selector: '#BOARD .sakura-token',\r\n        build: function ($elem, event) {\r\n            // 現在のトークン数を取得\r\n            var region = $elem.attr('data-region');\r\n            var tokenCount = 0;\r\n            if (region === 'distance') {\r\n                tokenCount = board.distance;\r\n            }\r\n            if (region === 'dust') {\r\n                tokenCount = board.dust;\r\n            }\r\n            if (region === 'aura') {\r\n                tokenCount = board.aura;\r\n            }\r\n            if (region === 'life') {\r\n                tokenCount = board.life;\r\n            }\r\n            if (region === 'flair') {\r\n                tokenCount = board.flair;\r\n            }\r\n            var items = {};\r\n            var itemBaseData = [\r\n                { key: 'moveToDistance', name: '間合へ移動', region: 'distance' },\r\n                { key: 'moveToDust', name: 'ダストへ移動', region: 'dust' },\r\n                { key: 'moveToAura', name: 'オーラへ移動', region: 'aura' },\r\n                { key: 'moveToLife', name: 'ライフへ移動', region: 'life' },\r\n                { key: 'moveToFlair', name: 'フレアへ移動', region: 'flair' },\r\n            ];\r\n            itemBaseData.forEach(function (data) {\r\n                if (region === data.region)\r\n                    return true;\r\n                items[data.key] = { name: data.name, items: {} };\r\n                for (var i = 1; i <= tokenCount; i++) {\r\n                    items[data.key].items[i.toString()] = { name: i + \"\\u3064\" };\r\n                }\r\n                return true;\r\n            });\r\n            items['sep1'] = '---------';\r\n            items['cancel'] = { name: 'キャンセル' };\r\n            return {\r\n                callback: function (key) {\r\n                },\r\n                items: items,\r\n            };\r\n            // return {\r\n            //     callback: function(key: string) {\r\n            //     },\r\n            //     items: {\r\n            //         'move': {\r\n            //             name: '動かす',\r\n            //             items: {\r\n            //                 'dust': {\r\n            //                     name: 'ダストへ',\r\n            //                     items: {\r\n            //                         '1': {name: '1つ'},\r\n            //                         '2': {name: '2つ'},\r\n            //                         '3': {name: '3つ'},\r\n            //                     }\r\n            //                 }\r\n            //             }\r\n            //         },\r\n            //         'sep1': '---------',\r\n            //         'cancel': {name: 'キャンセル'},\r\n            //     }\r\n            // }\r\n        },\r\n    });\r\n    // context.init({ above: 'auto' });\r\n    // context.attach('.area.library .fbs-card', [\r\n    //     { text: '1枚引く', action: (e) => moveLibraryToHands(0) }\r\n    //     , { divider: true }\r\n    //     , { text: '再構成する' }\r\n    //     , { text: '再構成する (ライフ減少なし)' }\r\n    // ]);\r\n    // context.attach('.area.hand .fbs-card', [\r\n    //     { text: '使用する' }\r\n    //     , { text: '伏せ札にする' }\r\n    //     , { divider: true }\r\n    //     , { text: '自分の山札の一番底に置く ' }\r\n    //     , { text: '相手の山札の一番上に置く (毒カード用)' }\r\n    // ]);\r\n    // context.attach('.area.distance .sakura-token', [\r\n    //     { text: '→ オーラ (前進)', action: (e) => {e.preventDefault(); moveSakuraToken('distance', 'aura'); return true;} }\r\n    //     , { divider: true }\r\n    //     , { text: '→ ダスト' }\r\n    //     , { text: '→ ライフ' }\r\n    //     , { text: '→ フレア' }\r\n    // ]);\r\n    // context.attach('.area.dust .sakura-token', [\r\n    //     { text: '→ オーラ (宿し)', action: (e) => {e.preventDefault(); moveSakuraToken('dust', 'aura'); return true;} }\r\n    //     , { text: '→ 間合 (離脱)', action: (e) => {e.preventDefault(); moveSakuraToken('life', 'aura'); return true;} }\r\n    //     , { divider: true }\r\n    //     , { text: '→ オーラ', action: (e) => {e.preventDefault(); moveSakuraToken('life', 'aura'); return true;} }\r\n    //     , { text: '→ ダスト' }\r\n    //     , { text: '→ 間合' }\r\n    // ]);\r\n    // context.attach('.area.aura .sakura-token', [\r\n    //     { text: '→ ダスト (ダメージ)'}\r\n    //     , { text: '→ フレア (宿し)', action: (e) => {e.preventDefault(); moveSakuraToken('aura', 'flair'); return true;}}\r\n    //     , { divider: true }\r\n    //     , { text: '→ ライフ', action: (e) => {e.preventDefault(); moveSakuraToken('aura', 'life'); return true;} }\r\n    //     , { text: '→ 間合' }\r\n    //     , { divider: true }\r\n    //     , { text: 'オーラの最大値を無限大に変更' }\r\n    // ]);\r\n    // context.attach('.area.life .sakura-token', [\r\n    //     { text: '→ フレア (ダメージ)', action: (e) => {e.preventDefault(); moveSakuraToken('life', 'flair'); return true;} }\r\n    //     , { divider: true }\r\n    //     , { text: '→ オーラ', action: (e) => {e.preventDefault(); moveSakuraToken('life', 'aura'); return true;} }\r\n    //     , { text: '→ ダスト' }\r\n    //     , { text: '→ 間合' }\r\n    // ]);\r\n    // context.attach('.area.flair .sakura-token', [\r\n    //     { text: '→ ダスト (消費)' }\r\n    //     , { divider: true }\r\n    //     , { text: '→ オーラ', action: (e) => {e.preventDefault(); moveSakuraToken('flair', 'aura'); return true;} }\r\n    //     , { text: '→ ライフ', action: (e) => {e.preventDefault(); moveSakuraToken('flair', 'life'); return true;} }\r\n    //     , { text: '→ 間合' }\r\n    // ]);\r\n    ;\r\n});\r\n"],"sourceRoot":""}