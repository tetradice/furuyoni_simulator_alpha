{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server.ts","webpack:///./src/sakuraba.ts","webpack:///./src/sakuraba/actions/board.ts","webpack:///./src/sakuraba/actions/card.ts","webpack:///./src/sakuraba/actions/index.ts","webpack:///./src/sakuraba/actions/log.ts","webpack:///./src/sakuraba/actions/misc.ts","webpack:///./src/sakuraba/actions/sakuraToken.ts","webpack:///./src/sakuraba/models/Board.ts","webpack:///./src/sakuraba/models/index.ts","webpack:///./src/sakuraba/utils/index.ts","webpack:///./src/sakuraba/utils/misc.ts","webpack:///./src/sakuraba/utils/modal.ts","webpack:///./src/sakuraba/utils/state.ts","webpack:///external \"express\"","webpack:///external \"hyperapp\"","webpack:///external \"lodash\"","webpack:///external \"moment\"","webpack:///external \"path\"","webpack:///external \"randomstring\"","webpack:///external \"redis\"","webpack:///external \"socket.io\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server.ts\");\n","'use strict';\r\n\r\nimport express = require('express');\r\nimport socketIO = require('socket.io');\r\nimport * as path from 'path';\r\nimport * as redis from 'redis';\r\nimport moment = require('moment');\r\nimport * as randomstring from 'randomstring';\r\nimport * as sakuraba from './src/sakuraba';\r\nimport { createInitialState } from './src/sakuraba/utils';\r\n// import browserSync = require('browser-sync');\r\n// import connectBrowserSync = require('connect-browser-sync');\r\nimport { app, h } from 'hyperapp';\r\nimport { actions, ActionsType } from './src/sakuraba/actions';\r\n\r\nconst RedisClient = redis.createClient(process.env.REDIS_URL);\r\nconst PORT = process.env.PORT || 3000;\r\nconst INDEX = path.join(__dirname, '../index.html');\r\nconst MAIN_JS = path.join(__dirname, 'main.js');\r\nconst MAIN_JS_MAP = path.join(__dirname, 'main.js.map');\r\nconsole.log(MAIN_JS);\r\n\r\nconst browserSyncConfigurations = { \"files\": \"dist/*.js\" };\r\nconst server = express()\r\n  // .use(connectBrowserSync(browserSync(browserSyncConfigurations)))\r\n  .set('views', path.join(__dirname, '../'))\r\n  .set('view engine', 'ejs')\r\n  .use(express.static('public'))\r\n  .use(express.static('node_modules'))\r\n  .get('/dist/main.js', (req, res) => res.sendFile(MAIN_JS) )\r\n  .get('/dist/main.js.map', (req, res) => res.sendFile(MAIN_JS_MAP) )\r\n  .get('/', (req, res) => res.sendFile(INDEX) )\r\n  .get('/b/:boardId/:side', (req, res) => res.render('board', {boardId: req.params.boardId, side: req.params.side}) )\r\n  .post('/boards.create', (req, res) => {\r\n    // 新しい卓IDを生成\r\n    let boardId = randomstring.generate({\r\n        length: 10\r\n      , readable: true\r\n    });\r\n\r\n    // 卓を追加\r\n    let state = createInitialState();\r\n    RedisClient.HSET('boards', boardId, JSON.stringify(state.board));\r\n\r\n    // 卓にアクセスするためのURLを生成\r\n    let urlBase = req.protocol + '://' + req.hostname + ':' + PORT;\r\n    let p1Url = `${urlBase}/b/${boardId}/p1`;\r\n    let p2Url = `${urlBase}/b/${boardId}/p2`;\r\n    let watchUrl = `${urlBase}/b/${boardId}/watch`;\r\n\r\n    res.json({p1Url: p1Url, p2Url: p2Url, watchUrl: watchUrl});\r\n  })\r\n  .listen(PORT, () => console.log(`Listening on ${ PORT }`));\r\n\r\nconst io = socketIO(server);\r\n\r\n/** Redis上に保存されたボードデータを取得 */\r\nfunction getStoredBoard(boardId: string, callback: (board: state.Board) => void){\r\n  // ボード情報を取得\r\n  RedisClient.HGET('boards', boardId, (err, json) => {\r\n    let boardData = JSON.parse(json) as state.Board;\r\n    console.log('getStoredBoard: ', boardData);\r\n\r\n    // コールバックを実行\r\n    callback.call(undefined, boardData);\r\n  });\r\n}\r\n\r\n/** Redisへボードデータを保存 */\r\nfunction saveBoard(boardId: string, board: state.Board, callback: () => void){\r\n  console.log('saveBoard: ', JSON.stringify(board));\r\n  // ボード情報を保存\r\n  RedisClient.HSET('boards', boardId, JSON.stringify(board), (err, success) => {\r\n    // コールバックを実行\r\n    callback.call(undefined);\r\n  });\r\n}\r\n\r\nlet view = () => h('div');\r\nlet appActions = app(createInitialState(), actions, view, null) as ActionsType;\r\n\r\nio.on('connection', (socket) => {\r\n  console.log(`Client connected - ${socket.id}`);\r\n  socket.on('disconnect', () => console.log('Client disconnected'));\r\n  \r\n  // ボード情報のリクエスト\r\n  socket.on('request_first_board_to_server', (data) => {\r\n    console.log('on request_first_board_to_server: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      console.log('emit send_first_board_to_client: ', socket.id, board);\r\n      socket.emit('send_first_board_to_client', board);\r\n    });\r\n  });\r\n\r\n  // ログ追加\r\n  socket.on('append_action_log', (data: sakuraba.SocketParam.appendActionLog) => {\r\n    console.log('on append_action_log: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      // // ログをアップデートして保存\r\n      // let rec = new sakuraba.LogRecord();\r\n      // Object.assign(rec, data.log);\r\n      // board.actionLog.push(rec);\r\n      // saveBoard(data.boardId, board, () => {\r\n      //   // イベントを他ユーザーに配信\r\n      //   let param: sakuraba.SocketParam.bcAppendActionLog = {log: rec};\r\n      //   socket.broadcast.emit('bc_append_action_log', param);\r\n      // });\r\n    });\r\n  });\r\n  socket.on('append_chat_log', (data: sakuraba.SocketParam.appendChatLog) => {\r\n    console.log('on append_chat_log: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      // // ログをアップデートして保存\r\n      // let rec = new sakuraba.LogRecord();\r\n      // Object.assign(rec, data.log);\r\n      // board.chatLog.push(rec);\r\n      // saveBoard(data.boardId, board, () => {\r\n      //   // イベントを他ユーザーに配信\r\n      //   let param: sakuraba.SocketParam.bcAppendChatLog = {log: rec};\r\n      //   socket.broadcast.emit('bc_append_chat_log', param);\r\n      // });\r\n    });\r\n  });\r\n\r\n  // 名前の入力\r\n  socket.on('player_name_input', (data: {boardId: string, side: sakuraba.Side, name: string}) => {\r\n    console.log('on player_name_input: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      // 名前をアップデートして保存\r\n      board.playerNames[data.side] = data.name;\r\n      saveBoard(data.boardId, board, () => {\r\n        // プレイヤー名が入力されたイベントを他ユーザーに配信\r\n        socket.broadcast.emit('on_player_name_input', board);\r\n      });\r\n    });\r\n  });\r\n\r\n  socket.on('reset_board', (data: {boardId: string}) => {\r\n    console.log('on reset_board: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      // 盤を初期状態に戻す\r\n      appActions.setBoard(board);\r\n      appActions.resetBoard();\r\n      appActions.getState();\r\n      let st = (appActions.getState() as any) as state.State;\r\n\r\n      saveBoard(data.boardId, st.board, () => {\r\n        // プレイヤー名が入力されたイベントを他ユーザーに配信\r\n        socket.broadcast.emit('on_player_name_input', board);\r\n      });\r\n    });\r\n  });\r\n\r\n  // メガミの選択\r\n  socket.on('megami_select', (data: {boardId: string, side: sakuraba.Side, megamis: sakuraba.Megami[]}) => {\r\n    console.log('on megami_select: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      // メガミをアップデートして保存\r\n      board.megamis[data.side] = data.megamis;\r\n      saveBoard(data.boardId, board, () => {\r\n        // メガミが選択されたイベントを他ユーザーに配信\r\n        socket.broadcast.emit('on_megami_select', board);\r\n      });\r\n    });\r\n  });\r\n\r\n  // デッキの構築\r\n  socket.on('deck_build', (data: {boardId: string, side: sakuraba.Side, addObjects: state.BoardObject[]}) => {\r\n    console.log('on deck_build: ', data);\r\n\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      board.objects = board.objects.concat(data.addObjects);\r\n      saveBoard(data.boardId, board, () => {\r\n        // デッキが構築されたイベントを他ユーザーに配信\r\n        socket.broadcast.emit('on_deck_build', board);\r\n      });\r\n\r\n      // let myBoardSide = board.getMySide(data.side);\r\n\r\n      // let serialized = board.serialize();\r\n      // serialized.p1Side.library = data.library;\r\n      // serialized.p1Side.specials = data.specials;\r\n      // board.deserialize(serialized);\r\n\r\n      // saveBoard(data.boardId, board, () => {\r\n      //   // デッキが構築されたイベントを他ユーザーに配信\r\n      //   socket.broadcast.emit('on_deck_build',  board);\r\n      // });\r\n    });\r\n  });\r\n\r\n  // ボードオブジェクトの状態を更新\r\n  socket.on('board_object_set', (data: {boardId: string, side: sakuraba.Side, objects: state.BoardObject[]}) => {\r\n    console.log('on board_object_set: ', data);\r\n    // ボード情報を取得\r\n    getStoredBoard(data.boardId, (board) => {\r\n      board.objects = data.objects;\r\n      saveBoard(data.boardId, board, () => {\r\n        // ボードオブジェクトの状態が更新されたイベントを他ユーザーに配信\r\n        socket.broadcast.emit('on_board_object_set', board);\r\n      });\r\n    });\r\n  });\r\n});\r\n// setInterval(() => {\r\n//   let count = RedisClient.INCR('counter', (error, n) => {\r\n//     io.emit('time', n);\r\n//   });\r\n  \r\n// }, 1000);","import {Serializable, Serialize, SerializeProperty} from \"ts-serializer\";\r\nimport * as moment from 'moment';\r\n\r\n// 独自型\r\nexport type SakuraTokenArea = \"aura\" | \"life\" | \"flair\" | \"distance\" | \"dust\" | \"on-card\";\r\nexport type CardArea = \"library\" | \"hand\" | \"used\" | \"hidden-used\" | \"special\";\r\nexport type RegionName = SakuraTokenArea | CardArea | \"vigor\";\r\nexport type CardType = \"attack\" | \"reaction\" | \"action\" | \"fullpower\" | \"enhance\";\r\nexport type CardBaseType = 'normal' | 'special';\r\nexport type Side = 'p1' | 'p2' | 'watch';\r\n\r\n// メガミ情報\r\ninterface MegamiDataItem {\r\n    name: string;\r\n    symbol: string;\r\n}\r\nexport const MEGAMI_DATA = {\r\n      'yurina': {name: 'ユリナ', symbol: '刀'}\r\n    , 'saine': {name: 'サイネ', symbol: '薙刀'}\r\n    , 'himika': {name: 'ヒミカ', symbol: '銃'}\r\n    , 'tokoyo': {name: 'トコヨ', symbol: '扇'}\r\n    , 'oboro': {name: 'オボロ', symbol: '忍'}\r\n    , 'yukihi': {name: 'ユキヒ', symbol: '傘/簪'}\r\n    , 'shinra': {name: 'シンラ', symbol: '書'}\r\n    , 'hagane': {name: 'ハガネ', symbol: '槌'}\r\n    , 'chikage': {name: 'チカゲ', symbol: '毒'}\r\n    , 'kururu': {name: 'クルル', symbol: '絡繰'}\r\n    , 'thallya': {name: 'サリヤ', symbol: '乗騎'}\r\n    , 'raira': {name: 'ライラ', symbol: '爪'}\r\n};\r\nexport type Megami = keyof (typeof MEGAMI_DATA);\r\n\r\n// カード情報\r\ninterface CardDataItemBase {\r\n    megami: Megami;\r\n    name: string;\r\n    ruby?: string;\r\n    types: CardType[];\r\n    range?: string;\r\n    damage?: string;\r\n    capacity?: string;\r\n    text: string;\r\n}\r\n\r\ninterface NormalCardDataItem extends CardDataItemBase {\r\n    baseType: 'normal';\r\n}\r\n\r\ninterface SpecialCardDataItem extends CardDataItemBase {\r\n    baseType: 'special';\r\n    cost?: string;\r\n}\r\n\r\ntype CardDataItem = NormalCardDataItem | SpecialCardDataItem;\r\n\r\nexport const CARD_DATA: {[key: string]: CardDataItem} = {\r\n      '01-yurina-o-n-1': {megami: 'yurina', name: '斬', ruby: 'ざん', baseType: 'normal', types: ['attack'], range: \"3-4\", damage: '3/1', text: ''}\r\n    , '01-yurina-o-n-2': {megami: 'yurina', name: '一閃', ruby: 'いっせん', baseType: 'normal', types: ['attack'], range: \"3\", damage: '2/2', text: '【常時】決死-あなたのライフが3以下ならば、この《攻撃》は+1/+0となる。'}\r\n    , '01-yurina-o-n-3': {megami: 'yurina', name: '柄打ち', ruby: 'つかうち', baseType: 'normal', types: ['attack'], range: \"1-2\", damage: '2/1', text: '【攻撃後】決死-あなたのライフが3以下ならば、このターンにあなたが次に行う《攻撃》は+1/+0となる。'}\r\n    , '01-yurina-o-n-4': {megami: 'yurina', name: '居合', ruby: 'いあい', baseType: 'normal', types: ['attack', 'fullpower'], range: \"3-4\", damage: '4/3', text: ''}\r\n    , '01-yurina-o-n-5': {megami: 'yurina', name: '足捌き', ruby: 'あしさばき', baseType: 'normal', types: ['action'], text: '現在の間合が4以上ならば、間合→ダスト：2'}\r\n    , '01-yurina-o-n-6': {megami: 'yurina', name: '圧気', ruby: 'あっき', baseType: 'normal', types: ['enhance'], capacity: '4', text: '隙\\n【破棄時】攻撃『適正距離1-4、3/-』を行う。'}\r\n    , '01-yurina-o-n-7': {megami: 'yurina', name: '気炎万丈', ruby: 'きえんばんじょう', baseType: 'normal', types: ['enhance', 'fullpower'], capacity: '2', text: '【展開中】決死-あなたのライフが3以下ならば、あなたの他のメガミによる《攻撃》は+1/+1となるとともに超克を得る。'}\r\n    , '01-yurina-o-s-1': {megami: 'yurina', name: '月影落', ruby: 'つきかげおとし', baseType: 'special', cost: '7', types: ['attack'], range: '3-4', damage: '4/4', text: ''}\r\n    , '01-yurina-o-s-2': {megami: 'yurina', name: '浦波嵐', ruby: 'うらなみあらし', baseType: 'special', cost: '3', types: ['attack', 'reaction'], range: '0-10', damage: '2/-', text: '【攻撃後】対応した《攻撃》は-2/+0となる。'}\r\n    , '01-yurina-o-s-3': {megami: 'yurina', name: '浮舟宿', ruby: 'うきふねやどし', baseType: 'special', cost: '3', types: ['action'], text: 'ダスト→自オーラ：5 \\n【再起】決死-あなたのライフが3以下である。'}\r\n    , '01-yurina-o-s-4': {megami: 'yurina', name: '天音揺波の底力', ruby: 'あまねゆりなのそこぢから', baseType: 'special', cost: '5', types: ['attack', 'fullpower'], range: '1-4', damage: '5/5', text: '【常時】決死-あなたのライフが3以下でないと、このカードは使用できない。'}\r\n\r\n    , '02-saine-o-n-1': {megami: 'saine', name: '八方振り', ruby: 'はっぽうぶり', baseType: 'normal', types: ['attack'], range: \"4-5\", damage: '2/1', text: '【攻撃後】八相-あなたのオーラが0ならば、攻撃『適正距離4-5、2/1』を行う。'}\r\n    , '02-saine-o-n-2': {megami: 'saine', name: '薙斬り', ruby: 'なぎぎり', baseType: 'normal', types: ['attack', 'reaction'], range: \"4-5\", damage: '3/1', text: ''}\r\n    , '02-saine-o-n-3': {megami: 'saine', name: '返し刃', ruby: 'かえしやいば', baseType: 'normal', types: ['attack'], range: \"3-5\", damage: '1/1', text: '【攻撃後】このカードを対応で使用したならば、攻撃『適正距離3-5、2/1、対応不可』を行う。'}\r\n    , '02-saine-o-n-4': {megami: 'saine', name: '見切り', ruby: 'みきり', baseType: 'normal', types: ['action'], text: '【常時】八相-あなたのオーラが0ならば、このカードを《対応》を持つかのように相手の《攻撃》に割り込んで使用できる。\\n間合⇔ダスト：1'}\r\n    , '02-saine-o-n-5': {megami: 'saine', name: '圏域', ruby: 'けんいき', baseType: 'normal', types: ['enhance'], capacity: '3', text: '【展開時】ダスト→間合：1\\n【展開中】達人の間合は2大きくなる。'}\r\n    , '02-saine-o-n-6': {megami: 'saine', name: '衝音晶', ruby: 'しょうおんしょう', baseType: 'normal', types: ['enhance', 'reaction'], capacity: '1', text: '【展開時】対応した《攻撃》は-1/+0となる。 \\n【破棄時】攻撃『適正距離0-10、1/-、対応不可』を行う。'}\r\n    , '02-saine-o-n-7': {megami: 'saine', name: '無音壁', ruby: 'むおんへき', baseType: 'normal', types: ['enhance', 'fullpower'], capacity: '5', text: '【展開中】あなたへのダメージを解決するに際し、このカードの上に置かれた桜花結晶をあなたのオーラにあるかのように扱う。'}\r\n    , '02-saine-o-s-1': {megami: 'saine', name: '律動弧戟', ruby: 'りつどうこげき', baseType: 'special', cost: '5', types: ['action'], text: '攻撃『適正距離3-4、1/1』を行う。\\n攻撃『適正距離4-5、1/1』を行う。\\n攻撃『適正距離3-5、2/2』を行う。'}\r\n    , '02-saine-o-s-2': {megami: 'saine', name: '響鳴共振', ruby: 'きょうめいきょうしん', baseType: 'special', cost: '1', types: ['action'], text: '相手のオーラが5以上ならば、相オーラ→間合：3'}\r\n    , '02-saine-o-s-3': {megami: 'saine', name: '音無砕氷', ruby: 'おとなしさいひょう', baseType: 'special', cost: '1', types: ['action', 'reaction'], text: '対応した《攻撃》は-1/-1となる。\\n【再起】八相-あなたのオーラが0である。'}\r\n    , '02-saine-o-s-4': {megami: 'saine', name: '氷雨細音の果ての果て', ruby: 'ひさめさいねのはてのはて', baseType: 'special', cost: '4', types: ['attack', 'reaction'], range: '1-5', damage: '5/5', text: '【常時】このカードは切札に対する対応でしか使用できない。'}\r\n\r\n    , '03-himika-o-n-1': {megami: 'himika', name: 'シュート', ruby: '', baseType: 'normal', types: ['attack'], range: \"4-10\", damage: '2/1', text: ''}\r\n    , '03-himika-o-n-2': {megami: 'himika', name: 'ラピッドファイア', ruby: '', baseType: 'normal', types: ['attack'], range: \"7-8\", damage: '2/1', text: '【常時】連火-このカードがこのターンに使用した3枚目以降のカードならば、この《攻撃》は+1/+1となる。'}\r\n    , '03-himika-o-n-3': {megami: 'himika', name: 'マグナムカノン', ruby: '', baseType: 'normal', types: ['attack'], range: \"5-8\", damage: '3/2', text: '【攻撃後】自ライフ→ダスト：1'}\r\n    , '03-himika-o-n-4': {megami: 'himika', name: 'フルバースト', ruby: '', baseType: 'normal', types: ['attack', 'fullpower'], range: \"5-9\", damage: '3/1', text: '【常時】この《攻撃》がダメージを与えるならば、相手は片方を選ぶのではなく両方のダメージを受ける。'}\r\n    , '03-himika-o-n-5': {megami: 'himika', name: 'バックステップ', ruby: '', baseType: 'normal', types: ['action'], text: 'カードを1枚引く。\\nダスト→間合：1'}\r\n    , '03-himika-o-n-6': {megami: 'himika', name: 'バックドラフト', ruby: '', baseType: 'normal', types: ['action'], text: '相手を畏縮させる。\\n連火-このカードがこのターンに使用した3枚目以降のカードならば、このターンにあなたが次に行う他のメガミによる《攻撃》を+1/+1する。'}\r\n    , '03-himika-o-n-7': {megami: 'himika', name: 'スモーク', ruby: '', baseType: 'normal', types: ['enhance'], capacity: '3', text: '【展開中】カードの矢印(→)により間合にある桜花結晶は移動しない。'}\r\n    , '03-himika-o-s-1': {megami: 'himika', name: 'レッドバレット', ruby: '', baseType: 'special', cost: '0', types: ['attack'], range: '5-10', damage: '3/1', text: ''}\r\n    , '03-himika-o-s-2': {megami: 'himika', name: 'クリムゾンゼロ', ruby: '', baseType: 'special', cost: '5', types: ['attack'], range: '0-2', damage: '2/2', text: '【常時】この《攻撃》がダメージを与えるならば、相手は片方を選ぶのではなく両方のダメージを受ける。\\n【常時】現在の間合が0ならば、この《攻撃》は対応不可を得る。'}\r\n    , '03-himika-o-s-3': {megami: 'himika', name: 'スカーレットイマジン', ruby: '', baseType: 'special', cost: '3', types: ['action'], text: 'カードを2枚引く。その後、あなたは手札を1枚伏せ札にする。'}\r\n    , '03-himika-o-s-4': {megami: 'himika', name: 'ヴァーミリオンフィールド', ruby: '', baseType: 'special', cost: '2', types: ['action'], text: '連火-このカードがこのターンに使用した3枚目以降のカードならば、ダスト→間合：2\\n【再起】あなたの手札が0枚である。'}\r\n\r\n    // , '99-xxx-o-n-1': {megami: 'xxx', name: '　', ruby: '　', baseType: 'normal', types: ['attack'], range: \" \", damage: '-/-', text: ''}\r\n    // , '99-xxx-o-s-1': {megami: 'xxx', name: '　', ruby: '　', baseType: 'special', cost: '5', types: ['attack'], range: ' ', damage: '-/-', text: ''}\r\n\r\n};\r\n\r\n\r\n// socket.io用イベント\r\nexport namespace SocketParam {\r\n    export type appendActionLog = {boardId: string, log: state.LogRecord};\r\n    export type bcAppendActionLog = {log: state.LogRecord};\r\n\r\n    export type appendChatLog = {boardId: string, log: state.LogRecord};\r\n    export type bcAppendChatLog = {log: state.LogRecord};\r\n}\r\n","import * as  _ from \"lodash\";\r\nimport * as models from \"../models\";\r\nimport * as utils from \"../utils\";\r\nimport { Megami, CARD_DATA } from \"../../sakuraba\";\r\nimport cardActions from './card';\r\n\r\nexport default {\r\n    /** ボード全体を設定する */\r\n    setBoard: (newBoard: state.Board) => {\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** ボード全体を初期化する */\r\n    resetBoard: () => {\r\n        return {board: utils.createInitialState().board};\r\n    },\r\n\r\n    /** 指定したサイドのプレイヤー名を設定する */\r\n    setPlayerName: (p: {side: PlayerSide, name: string}) => (state: state.State) => {\r\n        let newBoard = _.merge({}, state.board);\r\n        newBoard.playerNames[p.side] = p.name;\r\n        \r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** 指定したサイドのメガミを設定する */\r\n    setMegamis: (p: {side: PlayerSide, megami1: Megami, megami2: Megami}) => (state: state.State) => {\r\n        let newBoard = _.merge({}, state.board);\r\n        newBoard.megamis[p.side] = [p.megami1, p.megami2];\r\n        \r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** 集中力の値を変更 */\r\n    setVigor: (p: {\r\n        /** どちら側の集中力か */\r\n        side: PlayerSide;\r\n        /** 新しい集中力の値 */\r\n        value: VigorValue;\r\n    }) => (state: state.State) => {\r\n        let newBoard = models.Board.clone(state.board);\r\n        newBoard.vigors[p.side] = p.value;\r\n\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** デッキのカードを設定する */\r\n    setDeckCards: (p: {cardIds: string[]}) => (state: state.State, actions: typeof cardActions) => {\r\n        p.cardIds.forEach((id) => {\r\n            const data = CARD_DATA[id];\r\n            if(data.baseType === 'normal'){\r\n                actions.addCard({region: 'library', cardId: id});\r\n            }\r\n            if(data.baseType === 'special'){\r\n                actions.addCard({region: 'special', cardId: id});\r\n            }           \r\n        });\r\n    },\r\n\r\n    /** ボードの状態を取得 */\r\n    getState: () => (state: state.State) => state\r\n}","import * as  _ from \"lodash\";\r\nimport * as models from \"../models\";\r\nimport * as utils from \"../utils\";\r\nimport { ActionsType } from \".\";\r\n\r\nexport default {\r\n    /** カードを1枚追加する */\r\n    addCard: (p: {region: CardRegion, cardId: string}) => (state: state.State) => {\r\n        // 元の盤の状態をコピーして新しい盤を生成\r\n        let newBoard = models.Board.clone(state.board);\r\n\r\n        // 現在カード数 + 1で新しい連番を振る\r\n        let cardCount = newBoard.objects.filter(obj => obj.type === 'card').length;\r\n        let objectId = `card-${cardCount + 1}`;\r\n\r\n        let newCard = utils.createCard(objectId, p.cardId, p.region, 'p1');\r\n        newBoard.objects.push(newCard);\r\n\r\n        // 領域情報更新\r\n        newBoard.updateRegionInfo();\r\n\r\n        // 新しい盤を返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** 指定領域のカードをクリアする */\r\n    clearCards: (p: {region: CardRegion}) => (state: state.State) => {\r\n        let newObjects = state.board.objects.filter(obj => (obj.type === 'card' && obj.region === p.region));\r\n        let newBoard = _.merge({}, state.board, {objects: newObjects});\r\n\r\n        // 新しい盤を返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /**\r\n     * カードを指定領域から別の領域に移動させる\r\n     */\r\n    moveCard: (p: {\r\n        /** 移動元のサイド */\r\n        fromSide: PlayerSide;\r\n        /** 移動元の領域 */\r\n        from: CardRegion;\r\n        /** 何枚目のカードを移動するか。省略時は先頭 */\r\n        fromIndex?: number;\r\n        /** 移動先のサイド */\r\n        toSide: PlayerSide;\r\n        /** 移動先の領域 */\r\n        to: CardRegion;\r\n        /** 移動枚数 */\r\n        moveNumber?: number;\r\n    }) => (state: state.State) => {\r\n        // 元の盤の状態をコピーして新しい盤を生成\r\n        let newBoard = models.Board.clone(state.board);\r\n\r\n        // カードを指定枚数移動 (省略時は0枚)\r\n        let fromIndex = (p.fromIndex === undefined ? 0 : p.fromIndex);\r\n        let num = (p.moveNumber === undefined ? 1 : p.moveNumber);\r\n        let fromRegionCards = newBoard.getRegionCards(p.fromSide, p.from).sort((a, b) => a.indexOfRegion - b.indexOfRegion);\r\n        let toRegionCards = newBoard.getRegionCards(p.toSide, p.to).sort((a, b) => a.indexOfRegion - b.indexOfRegion);\r\n        let indexes = toRegionCards.map(c => c.indexOfRegion);\r\n        let maxIndex = Math.max(...indexes);\r\n\r\n        let targetCards = fromRegionCards.slice(fromIndex, fromIndex + num);\r\n        targetCards.forEach(c => {\r\n            c.region = p.to;\r\n            // 領域インデックスは最大値+1\r\n            c.indexOfRegion = maxIndex + 1;\r\n            maxIndex++;\r\n        });\r\n\r\n        // 領域情報の更新\r\n        newBoard.updateRegionInfo();\r\n\r\n        // 新しい盤を返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    flipCard: (objectId: string) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n        let newBoard = models.Board.clone(state.board);\r\n\r\n        let card = newBoard.getCard(objectId);\r\n        if(card.type !== null){\r\n            card.opened = !card.opened;\r\n        }\r\n        ret.board = newBoard;\r\n\r\n        return ret;\r\n    },\r\n\r\n    shuffle: (p: {side: PlayerSide}) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        let newBoard = models.Board.clone(state.board);\r\n        // 山札のカードをすべて取得\r\n        let cards = newBoard.getRegionCards(p.side, 'library');\r\n        // ランダムに整列し、その順番をインデックスに再設定\r\n        let shuffledCards = _.shuffle(cards);\r\n        shuffledCards.forEach((c, i) => {\r\n            c.indexOfRegion = i;\r\n        });\r\n\r\n        // 新しいボードを返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** 再構成 */\r\n    reshuffle: (p: {side: PlayerSide, lifeDecrease?: boolean}) => (state: state.State, actions: ActionsType) => {\r\n        // 使用済、伏せ札をすべて山札へ移動\r\n        let newBoard = models.Board.clone(state.board);\r\n        let usedCards = newBoard.getRegionCards(p.side, 'used');\r\n        actions.moveCard({from: 'used', fromSide: p.side, to: 'library', toSide: p.side, moveNumber: usedCards.length});\r\n        \r\n        newBoard = models.Board.clone(actions.getState().board);\r\n        let hiddenUsedCards = newBoard.getRegionCards(p.side, 'hidden-used');\r\n        actions.moveCard({from: 'hidden-used', fromSide: p.side, to: 'library', toSide: p.side, moveNumber: hiddenUsedCards.length});\r\n\r\n        // 山札を混ぜる\r\n        actions.shuffle({side: p.side});\r\n    },\r\n\r\n    /** ドラッグ開始 */\r\n    cardDragStart: (card: state.Card) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // ドラッグを開始したカードを設定\r\n        ret.draggingFromCard = card;\r\n\r\n        return ret;\r\n    },\r\n\r\n    \r\n    /** ドラッグ中にカード領域の上に移動 */\r\n    cardDragEnter: (region: CardRegion) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // 切札エリアからのドラッグや、切札エリアへのドラッグは禁止\r\n        if(state.draggingFromCard.region === 'special' || region === 'special'){\r\n            return null;\r\n        }\r\n\r\n        // ドラッグを開始したカードを設定\r\n        ret.draggingHoverCardRegion = region;\r\n\r\n        return ret;\r\n    },\r\n    \r\n    /** ドラッグ中にカード領域の上から離れた */\r\n    cardDragLeave: () => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // ドラッグ中領域の初期化\r\n        ret.draggingHoverCardRegion = null;\r\n\r\n        return ret;\r\n    },\r\n\r\n    /** ドラッグ終了 */\r\n    cardDragEnd: () => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        ret.draggingFromCard = null;\r\n        ret.draggingHoverCardRegion = null;\r\n\r\n        return ret;\r\n    },\r\n}","import logActions from './log';\r\nimport cardActions from './card';\r\nimport boardActions from './board';\r\nimport sakuraTokenActions from './sakuraToken';\r\nimport miscActions from './misc';\r\nimport { WiredActions } from 'hyperapp-types';\r\n\r\nlet actionsTemp = Object.assign(logActions, cardActions, boardActions, sakuraTokenActions);\r\nlet actionsTemp2 = Object.assign(actionsTemp, miscActions);\r\n\r\nexport const actions = actionsTemp2;\r\n\r\nexport type ActionsType = WiredActions<state.State, typeof actions>;\r\n","import moment = require('moment');\r\nimport * as models from \"../models\";\r\n\r\nexport default {\r\n    appendActionLog: (p: {text: string}) => (state: state.State) => {\r\n        // 元の盤の状態をコピーして新しい盤を生成\r\n        let newBoard = models.Board.clone(state.board);\r\n        let append: state.LogRecord = {body: p.text, time: moment().format()};\r\n        newBoard.actionLog.push(append);\r\n        \r\n        return {board: newBoard};\r\n    }\r\n}","export default {\r\n    /** ズーム倍率を変更する */\r\n    setZoom: (p: number) => {\r\n        return {zoom: p};\r\n    },\r\n}","import * as  _ from \"lodash\";\r\nimport * as models from \"../models\";\r\nimport * as utils from \"../utils\";\r\nimport { ActionsType } from \".\";\r\n\r\nexport default {\r\n    /** 桜花結晶を指定数追加する */\r\n    addSakuraToken: (p: {side: PlayerSide, region: SakuraTokenRegion, number: number}) => (state: state.State) => {\r\n        // 元の盤の状態をコピーして新しい盤を生成\r\n        let newBoard = models.Board.clone(state.board);\r\n\r\n        // 指定数分繰り返す\r\n        _.times(p.number, () => {\r\n            // 現在桜花結晶数 + 1で新しい連番を振る\r\n            let tokenCount = newBoard.objects.filter(obj => obj.type === 'sakura-token').length;\r\n            let objectId = `sakuraToken-${tokenCount + 1}`;\r\n\r\n            let newToken = utils.createSakuraToken(objectId, p.region, p.side);\r\n            newBoard.objects.push(newToken);\r\n        });\r\n\r\n\r\n        // 領域情報更新\r\n        newBoard.updateRegionInfo();\r\n\r\n        // 新しい盤を返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /**\r\n     * カードを指定領域から別の領域に移動させる\r\n     */\r\n    moveSakuraToken: (p: {\r\n        /** 移動元のサイド */\r\n        fromSide: PlayerSide;\r\n        /** 移動元の領域 */\r\n        from: SakuraTokenRegion;\r\n        /** 移動先のサイド */\r\n        toSide: PlayerSide;\r\n        /** 移動先の領域 */\r\n        to: SakuraTokenRegion;\r\n        /** 移動数 */\r\n        moveNumber?: number;\r\n    }) => (state: state.State) => {\r\n        // 元の盤の状態をコピーして新しい盤を生成\r\n        let newBoard = models.Board.clone(state.board);\r\n\r\n        // 桜花結晶数を指定枚数移動 (省略時は0枚)\r\n        let num = (p.moveNumber === undefined ? 1 : p.moveNumber);\r\n        let fromRegionSakuraTokens = newBoard.getRegionSakuraTokens(p.fromSide, p.from).sort((a, b) => a.indexOfRegion - b.indexOfRegion);\r\n        let toRegionSakuraTokens = newBoard.getRegionSakuraTokens(p.toSide, p.to).sort((a, b) => a.indexOfRegion - b.indexOfRegion);\r\n        let indexes = toRegionSakuraTokens.map(c => c.indexOfRegion);\r\n        let maxIndex = Math.max(...indexes);\r\n\r\n        let targetSakuraTokens = fromRegionSakuraTokens.slice(0, num);\r\n        targetSakuraTokens.forEach(c => {\r\n            c.region = p.to;\r\n            // 領域インデックスは最大値+1\r\n            c.indexOfRegion = maxIndex + 1;\r\n            maxIndex++;\r\n        });\r\n\r\n        // 領域情報の更新\r\n        newBoard.updateRegionInfo();\r\n\r\n        // 新しい盤を返す\r\n        return {board: newBoard};\r\n    },\r\n\r\n    /** ドラッグ開始 */\r\n    sakuraTokenDragStart: (sakuraToken: state.SakuraToken) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // ドラッグを開始したカードを設定\r\n        ret.draggingFromSakuraToken = sakuraToken;\r\n\r\n        return ret;\r\n    },\r\n    \r\n    /** ドラッグ中にカード領域の上に移動 */\r\n    sakuraTokenDragEnter: (region: SakuraTokenRegion) => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // ドラッグを開始したカードを設定\r\n        ret.draggingHoverSakuraTokenRegion = region;\r\n\r\n        return ret;\r\n    },\r\n    \r\n    /** ドラッグ中にカード領域の上から離れた */\r\n    sakuraTokenDragLeave: () => (state: state.State) => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        // ドラッグ中領域の初期化\r\n        ret.draggingHoverSakuraTokenRegion = null;\r\n\r\n        return ret;\r\n    },\r\n\r\n    /** ドラッグ終了 */\r\n    sakuraTokenDragEnd: () => {\r\n        let ret: Partial<state.State> = {};\r\n\r\n        ret.draggingFromSakuraToken = null;\r\n        ret.draggingHoverSakuraTokenRegion = null;\r\n\r\n        return ret;\r\n    },\r\n}","import * as _ from \"lodash\";\r\nimport { Megami } from \"../../sakuraba\";\r\n\r\nexport class Board implements state.Board {\r\n    objects: state.BoardObject[];\r\n    playerNames: {p1: string, p2: string};\r\n    megamis: {p1: Megami[], p2: Megami[]};\r\n    vigors: {p1: VigorValue, p2: VigorValue};\r\n    witherFlags: {p1: boolean, p2: boolean};\r\n\r\n    actionLog: state.LogRecord[];\r\n    chatLog: state.LogRecord[];\r\n\r\n    constructor(original?: state.Board, deepCloning?: boolean){\r\n        if(original !== undefined){\r\n            if(deepCloning === true){\r\n                _.merge(this, original);\r\n            } else {\r\n                _.extend(this, original);\r\n            }\r\n        }\r\n    }\r\n\r\n    static clone(original: state.Board): Board{\r\n        return new Board(original, true);\r\n    }\r\n\r\n    /** すべてのカードを取得 */\r\n    getCards(): state.Card[] {\r\n        return this.objects.filter(v => v.type === 'card') as state.Card[];\r\n    } \r\n\r\n    /** 指定したIDのカードを取得 */\r\n    getCard(objectId: string): state.Card {\r\n        return this.objects.find(v => v.type === 'card' && v.id === objectId) as state.Card;\r\n    }\r\n\r\n    /** 指定した領域にあるカードを一括取得 */\r\n    getRegionCards(side: PlayerSide, region: CardRegion): state.Card[] {\r\n        return this.objects.filter(v => v.type === 'card' && v.side === side && v.region === region) as state.Card[];\r\n    }\r\n\r\n    /** すべての桜花結晶を取得 */\r\n    getSakuraTokens(): state.SakuraToken[] {\r\n        return this.objects.filter(v => v.type === 'sakura-token') as state.SakuraToken[];\r\n    } \r\n\r\n    /** 指定したIDの桜花結晶を取得 */\r\n    getSakuraToken(objectId: string): state.SakuraToken {\r\n        return this.objects.find(v => v.type === 'sakura-token' && v.id === objectId) as state.SakuraToken;\r\n    }\r\n\r\n    /** 指定した領域にある桜花結晶を一括取得 */\r\n    getRegionSakuraTokens(side: PlayerSide, region: SakuraTokenRegion): state.SakuraToken[] {\r\n        return this.objects.filter(v => v.type === 'sakura-token' && v.side === side && v.region == region) as state.SakuraToken[];\r\n    }\r\n\r\n    /** カード移動時などの領域情報一括更新 */\r\n    updateRegionInfo(){\r\n        let cards = this.getCards();\r\n        let sideAndRegions = _.uniq(cards.map(c => [c.side, c.region])) as [PlayerSide, CardRegion][];\r\n        sideAndRegions.forEach(r => {\r\n            let [side, region] = r;\r\n\r\n            let regionCards = this.getRegionCards(side, region).sort((a, b) => a.indexOfRegion - b.indexOfRegion);\r\n            let index = 0;\r\n            regionCards.forEach(c => {\r\n                // インデックス更新\r\n                c.indexOfRegion = index;\r\n                index++;\r\n\r\n                // 開閉状態更新\r\n                c.opened = (region === 'used' || region === 'hand');\r\n\r\n                // 回転状態更新\r\n                c.rotated = (region === 'hidden-used');\r\n\r\n                // known状態 (中身を知っているかどうか) 更新\r\n                c.known.p1 = true;\r\n                if(c.region === 'library') c.known.p1 = false; // 山札の場合は分からない\r\n\r\n            });\r\n        });\r\n    }\r\n}\r\n","export * from './Board'","export * from './state';\r\nexport * from './modal';\r\nexport * from './misc';","/** プレイヤーサイドを逆にする */\r\nexport function flipSide(side: PlayerSide): PlayerSide{\r\n  if(side === 'p1') return 'p2';\r\n  if(side === 'p2') return 'p1';\r\n  return side;\r\n}","export function confirmModal(desc: string, yesCallback: (this: JQuery, $element: JQuery) => false | void){\r\n    $('#CONFIRM-MODAL .description').html(desc);\r\n    $('#CONFIRM-MODAL')\r\n        .modal({closable: false, onApprove:yesCallback})\r\n        .modal('show');\r\n}\r\n","/** 初期ステートを生成 */\r\nexport function createInitialState(): state.State{\r\n    let st: state.State = {\r\n          stateDataVersion: 1\r\n        , board: {\r\n              objects: []\r\n            , playerNames: {p1: null, p2: null}\r\n            , megamis: {p1: null, p2: null}\r\n            , vigors: {p1: 0, p2: 0}\r\n            , witherFlags: {p1: false, p2: false}\r\n            , actionLog: []\r\n            , chatLog: []\r\n          }\r\n        , zoom: 1\r\n        , draggingFromCard: null\r\n        , draggingHoverCardRegion: null\r\n        , draggingFromSakuraToken: null\r\n        , draggingHoverSakuraTokenRegion: null\r\n    }\r\n    return st;\r\n}\r\n\r\n/** 指定した条件を満たすカード一覧を取得 */\r\nexport function getCards(state: state.State, region?: CardRegion): state.Card[]{\r\n  let ret: state.Card[] = [];\r\n  state.board.objects.forEach(obj => {\r\n    if(obj.type === 'card' && (region === undefined || obj.region === region)){\r\n      ret.push(obj);\r\n    }\r\n  });\r\n\r\n  return ret;\r\n}\r\n\r\n/** カード1枚を作成 */\r\nexport function createCard(id: string, cardId: string, region: CardRegion | null, side?: PlayerSide): state.Card{\r\n  return {\r\n      type: 'card'\r\n    , id: id\r\n    , cardId: cardId\r\n    , region: region\r\n    , indexOfRegion: 0\r\n    , rotated: false\r\n    , opened: false\r\n    , side: side\r\n    , known: {p1: true, p2: true}\r\n  };\r\n}\r\n\r\n\r\n/** 桜花結晶1つを作成 */\r\nexport function createSakuraToken(id: string, region: SakuraTokenRegion | null, side?: PlayerSide): state.SakuraToken{\r\n  return {\r\n      type: 'sakura-token'\r\n    , id: id\r\n    , region: region\r\n    , indexOfRegion: 0\r\n    , side: side\r\n    , onCardId: null\r\n  };\r\n}\r\n","module.exports = require(\"express\");","module.exports = require(\"hyperapp\");","module.exports = require(\"lodash\");","module.exports = require(\"moment\");","module.exports = require(\"path\");","module.exports = require(\"randomstring\");","module.exports = require(\"redis\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}